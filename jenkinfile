pipeline {
    agent any

    tools {
        maven 'Maven 3.x' // Ensure Maven is installed and configured in Jenkins.
        jdk 'JDK 11'      // Use the appropriate JDK version configured in Jenkins.
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone the repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Run Maven build
                bat 'mvn clean compile'
            }
        }

        stage('Run Application') {
            steps {
                // Run the compiled Java code
                bat 'java -cp target/classes code'
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONAR_TOKEN = credentials('sonarQub-token') // Replace with your SonarQube token ID.
            }
            steps {
                withSonarQubeEnv('SonarQube') {
                    bat 'mvn clean verify sonar:sonar \
                          -Dsonar.projectKey=Maven-1 \
                          -Dsonar.projectName='Maven-1' \
                          -Dsonar.host.url=http://localhost:9000 \
                          -Dsonar.token=sqp_919a2c0bbfb80a8dcf7b682918d213c1f3331819'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline failed due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build and analysis completed successfully!'
        }
        failure {
            echo 'Build or analysis failed.'
        }
    }
}
